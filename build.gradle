/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'HiekmaHe' at '10.05.17 13:27' with Gradle 2.14.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/

buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4' // Gradle plugin JUnit 5
	}
}

repositories {
	// Use 'jcenter' for resolving your dependencies.
	// You can declare any Maven/Ivy/file repository here.
	mavenCentral()
}

ext.junit4Version        = '4.12'
ext.junitVintageVersion  = '4.12.0-M4'
ext.junitPlatformVersion = '1.0.0-M4'
ext.junitJupiterVersion  = '5.0.0-M4'
ext.log4jVersion         = '2.6.2'

apply plugin: 'java'
apply plugin: 'maven' // Publish on jitpack.io  https://jitpack.io/docs/BUILDING/
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'  // JUnit 5

version = '1.0.0-SNAPSHOT'
group = 'com.github.khiekmann' //  jitpackio
sourceCompatibility = 1.8 // JUnit 5

compileTestJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	options.compilerArgs += '-parameters'
}

junitPlatform {
	//platformVersion "1.0.0-M4"
	filters {
		engines {
			// include 'junit-jupiter'
			// exclude 'junit-vintage'
		}
		tags {
			// include 'fast', 'smoke'
			// exclude 'slow', 'ci'
		}
		packages {
			// include 'com.sample.included1', 'com.sample.included2'
			// exclude 'com.sample.excluded1', 'com.sample.excluded2'
		}
		//includeClassNamePattern '.*Spec'
		includeClassNamePatterns '.*Test', '.*Tests'
		//logManager 'org.apache.logging.log4j.jul.LogManager'
	}
}

dependencies {
	// The production code uses the SLF4J logging API at compile time
	// compile 'org.slf4j:slf4j-api:1.7.21'

	// Declare the dependency for your favourite test framework you want to use in your tests.
	// TestNG is also supported by the Gradle Test task. Just change the
	// testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
	// 'test.useTestNG()' to your build script.
	//testCompile 'junit:junit:4.12'
	// download library for JUnit 5
	// JUnit Jupiter API and TestEngine implementation
	testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
	testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

	// If you also want to support JUnit 3 and JUnit 4 tests
	// testCompile("junit:junit:${junit4Version}")
	// testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")

	//testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
	//testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")
}

task wrapper(type: Wrapper) {
	description = 'Generates gradlew[.bat] scripts'
	gradleVersion = '3.0'
}